{"version":3,"sources":["tools.js","data.js","dark-mode.js","scroll-ani.js","tx-slider.js"],"names":["lg","val","console","log","$S","selector","document","querySelector","$A","querySelectorAll","html","documentElement","c","_","classList","toggle","d","getAttribute","setAttribute","textSlider","wordList","Interval","window","matchMedia","matches","addEventListener","e","newColorScheme","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","add","hiddenElements","el","observe","currentIndex","dynamicWordElement","changeWord","length","textContent","setInterval"],"mappings":"AACA,MAAAA,EAAAC,GAAAC,QAAAC,IAAAF,GACAG,EAAAC,GAAAC,SAAAC,cAAAF,GACAG,EAAAH,GAAAC,SAAAG,iBAAAJ,GACAK,EAAAJ,SAAAK,gBAKAC,EAAAC,GAAAH,EAAAI,UAAAC,OAAA,SAKAC,EAAAH,IACAH,EAAAO,aAAA,eAAA,SAAAP,EAAAO,aAAA,cAIAP,EAAAQ,aAAA,aAAA,SAHAR,EAAAQ,aAAA,aAAA,OAIA,ECpBAC,EAAA,CACAC,SAAA,CAAA,SAAA,SAAA,SACAC,SAAA,KCDAC,OAAAC,YACAD,OAAAC,WAAA,gCAAAC,QAEAd,EAAAQ,aAAA,aAAA,QAEAR,EAAAQ,aAAA,aAAA,SAGAI,OAAAC,WAAA,gCAAAE,iBACA,UAAAC,IACA,MAAAC,EAAAD,EAAAF,QAAA,OAAA,QACAd,EAAAQ,aAAA,aAAAS,EAAA,ICXA,MAAAC,EAAA,IAAAC,sBAAAC,IACAA,EAAAC,SAAAC,IACAA,EAAAC,gBACAD,EAAAE,OAAApB,UAAAqB,IAAA,OACA,GAKA,IAGAC,EAAA9B,SAAAG,iBAAA,WACA2B,EAAAL,SAAAM,GAAAT,EAAAU,QAAAD,KCdA,IAAAE,EAAA,EACA,MAAAC,EAAAlC,SAAAC,cAAA,iBAEAkC,EAAA5B,IACA0B,GAAAA,EAAA,GAAApB,EAAAC,SAAAsB,OACAF,EAAAG,YAAAxB,EAAAC,SAAAmB,EAAA,EAGAK,YAAAH,EAAAtB,EAAAE,UACAoB","file":"../scripts.js","sourcesContent":["// - Basic\nconst lg = val => console.log(val)\nconst $S = selector => document.querySelector(selector)\nconst $A = selector => document.querySelectorAll(selector)\nconst html = document.documentElement\n\n\n\n// - Utils\nconst c = _ => html.classList.toggle(\"debug\")  // _ Toggle CSS Debug\n\n\n\n// - Toggle Theme On The Spot\nconst d = _ => {\n    if (!html.getAttribute(\"data-theme\") || html.getAttribute(\"data-theme\") == \"light\") {\n        html.setAttribute(\"data-theme\", \"dark\")\n    }\n    else {\n        html.setAttribute(\"data-theme\", \"light\")\n    }   \n}\n","const textSlider = {\n    wordList: ['ثلاجات', 'غسالات', 'شاشات'],\n    Interval: 3e3  // _ Same as animation duration\n}\n","if (\n    window.matchMedia && \n    window.matchMedia('(prefers-color-scheme: dark)').matches\n) {\n    html.setAttribute(\"data-theme\", \"dark\")\n} else {\n    html.setAttribute(\"data-theme\", \"light\")\n}\n\nwindow.matchMedia('(prefers-color-scheme: dark)').addEventListener(\n    'change', e => {\n        const newColorScheme = e.matches ? \"dark\" : \"light\"\n        html.setAttribute(\"data-theme\", newColorScheme)\n    }\n)","\nconst observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            entry.target.classList.add('show')\n        }\n        //-- Commented so that the website is animated only once\n        // else {\n        //     entry.target.classList.remove('show')\n        // }\n    })\n})\n\nconst hiddenElements = document.querySelectorAll('.hidden')\nhiddenElements.forEach(el => observer.observe(el))\n","let currentIndex = 0\nconst dynamicWordElement = document.querySelector('.dynamic-word')\n\nconst changeWord = _ => {\n    currentIndex = (currentIndex + 1) % textSlider.wordList.length\n    dynamicWordElement.textContent = textSlider.wordList[currentIndex]\n}\n\nsetInterval(changeWord, textSlider.Interval)\nchangeWord()"]}